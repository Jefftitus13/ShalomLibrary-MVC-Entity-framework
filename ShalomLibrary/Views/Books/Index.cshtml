@model List<ShalomLibrary.Models.Domain.Books>
@{
    var searchTerm = ViewBag.SearchString?.ToLower();
}
<h1>Books</h1>

<div class="row">
    <div class="col-md-6">
        <form method="get" class="d-flex" asp-action="Index" asp-controller="Books">
            <input name="searchString" class="form-control me-1" type="search" placeholder="Search" aria-label="Search" />
            <button class="btn btn-dark" type="submit">Search your book</button>
        </form>
    </div>
</div>
<div class="col-md-6">
    <a asp-action="Index" class="text-dark">Back to list</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>BookTitle</th>
            <th>Author</th>
            <th>Genre</th>
            <th>Description</th>
            <th>YearPublished</th>
            <th>CopiesAvailable</th>
            <th>Price</th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Books in Model)
        {
            <tr class="book-row">
                <td>@Books.Id</td>
                <td>@Books.BookTitle</td>
                <td>@Books.Author</td>
                <td>@Books.Genre</td>
                <td>@Books.Description</td>
                <td>@Books.YearPublished</td>
                <td>@Books.CopiesAvailable</td>
                <td>@Books.Price</td>
                <td><a href="Books/View/@Books.Id">View</a></td>
            </tr>
        }
    </tbody>

</table>

<style>
    .highlight {
        background-color: yellow;
        font-weight: bold;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var searchTerm = '@searchTerm'.toLowerCase().trim();

        if (searchTerm) {
            var rows = document.querySelectorAll('.book-row');

            rows.forEach(function (row) {
                
                highlightText(row.children[1], searchTerm);
                highlightText(row.children[2], searchTerm);
                highlightText(row.children[3], searchTerm);
            });
        }
    });

    function highlightText(element, searchTerm) {
        if (element && element.textContent) {
            var text = element.textContent;
            var regex = new RegExp('(' + searchTerm + ')', 'gi');

            element.innerHTML = text.replace(regex, function (match) {
                return `<span class="highlight">${match}</span>`;
            });
        }
    }
</script>